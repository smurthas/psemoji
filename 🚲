#!/bin/bash

RED="\033[0;31m" #red
YEL="\033[0;33m" #yellow
CYN="\033[0;36m" #cyan
BLINK="\033[05m" #blink
RED_BLINK="\033[0;31;5m" #red blink
COLOR_RESET="\033[0m"

function get_location() {
  curl -s "http://ipinfo.io/" | grep loc | grep -o \\-*[0-9][0-9]*.[0-9][0-9]*,\\-*[0-9][0-9]*.[0-9][0-9]*
}

function get_zip() {
  latlng=`get_location`
  #echo latlng $latlng
  curl -s "http://maps.googleapis.com/maps/api/geocode/json?sensor=false&latlng=$latlng" | grep -B 1 postal_code | head -n1 | grep -o [0-9][0-9][0-9][0-9][0-9]
}

MOON=🌚
SUNNY=☀️
PARTLY=⛅️
CLOUDY=☁️
FOGGY=☁️
RAINY=☔️
SNOW=❄️
WINDY=💨
LIGHTENING=⚡️

UNITS=f
function get_weather() {
  location=$1

  url="http://query.yahooapis.com/v1/public/yql?q=use%20%27http%3A%2F%2Fgithub.com%2Fyql%2Fyql-tables%2Fraw%2Fmaster%2Fweather%2Fweather.bylocation.xml%27%20as%20we%3Bselect%20*%20from%20we%20where%20location%3D%22$location%22%20and%20unit%3D%27$UNITS%27&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys"

  res=`curl -s $url | tr '\n' ' '`
  #echo res: $res  | tr '\n' ' ' 1>&2
  #echo pretty res: $res | tr '\n' ' ' | python -mjson.tool 1>&2
  code=`echo $res | tr '\n' ' ' | python -mjson.tool 2>/dev/null | grep code | head -n1 | grep -o "[0-9][0-9]*"` 2>/dev/null
  temp=`echo $res | tr '\n' ' ' | python -mjson.tool 2>/dev/null | grep temp | head -n1 | grep -o "\-*[0-9][0-9]*"` 2>/dev/null
  if [ "$code" == "" ]; then exit 1; fi
  emoji="($code)"

  case $code in
  3)
    emoji="$LIGHTNING $LIGHTNING $LIGHTNING"
    ;;
  9 | 11 | 12 )
    emoji=$RAINY
    ;;
  13 | 14 | 15 | 16 | 41 | 42 | 43 | 46)
    emoji=$SNOW
    ;;
  32 | 34)
    emoji=$SUNNY
    ;;
  4 | 37 | 38 | 39)
    emoji=$LIGHTNING
    ;;
  20)
    emoji=$FOGGY
    ;;
  23 | 24)
    emoji=$WINDY
    ;;
  26 | 27 | 28)
    emoji=$CLOUDY
    ;;
  29 | 31 | 33)
    emoji=$MOON
    ;;
  21 | 30 | 44)
    emoji=$PARTLY
    ;;
  esac

  emoji="${emoji} "
  tempstr="${temp}°"

  tempcolor=
  if [ "$temp" -lt "40" ]
  then
    tempcolor=$CYN
  elif [ "$temp" -gt "79" ]
  then
    tempcolor=$RED
  elif [ "$temp" -gt "69" ]
  then
    tempcolor=$YEL
  fi
  echo $tempcolor$tempstr$COLOR_RESET$emoji
}

LAST_WEATHER_FILE=/tmp/last_weather_string

function refresh_weather_cache() {
  #echo refetching weather...

  location=`get_zip`
  #location=94107
  #echo zip: $location

  weather=`get_weather $location`

  echo $weather > $LAST_WEATHER_FILE
}

function get_weather_with_cache() {
  cat $LAST_WEATHER_FILE 2>/dev/null
}

function get_moon() {
  now=`date +%s`
  #now=1639814418 # test: Dec 18th, 2021, should be full moon
  new_moon=1383500000

  cycle=2953059
  multiple=100000
  let moon_mod=($now - $new_moon)/60/60/24*$multiple%$cycle/$multiple
  # echo $now $moon_mod 1>&2

  # Lunar cycle
  moon=$moon_mod
  case $moon_mod in
    29 | 0)
      moon=🌑
      ;;
    1 | 2 | 3 | 4)
      moon=🌒
      ;;
    5 | 6 | 7 | 8)
      moon=🌓
      ;;
    9 | 10 | 11 | 12)
      moon=🌔
      ;;
    13 | 14)
      moon=🌕
      ;;
    15 | 16 | 17 | 18)
      moon=🌖
      ;;
    19 | 20 | 21 | 22 | 23)
      moon=🌗
      ;;
    24 | 25 | 26 | 27 | 28)
      moon=🌘
      ;;
  esac

  echo $moon
}

function get_battery_percentage() {
  pmset -g batt | grep -o [0-9]*% | sed 's/%//g'
}

function get_lock() {
  if [ ! -w . ]; then
    echo "🔒  "
  fi
}

function get_battery() {
  batt=`get_battery_percentage`
  if [ "$batt" -gt "14" ]; then
    return
  elif [ "$batt" -lt "4" ]; then
    res="$RED_BLINK"
  elif [ "$batt" -lt "9" ]; then
    res="$RED"
  fi

  echo -e "$res 🔋 ($batt%)$COLOR_RESET"
}

function get_other() {
  res=

  #if [ "`system_profiler SPUSBDataType | grep iPhone`" != "" ]; then
  #  res="📱  $res"
  #fi

  res=`get_lock`$res

  if [ "$?" != "0" ]; then
    res="❗️ $res"
  fi

  res="`get_battery` $res"

  echo $res
}

function get_holiday() {
  res=

  # Holidays, etc
  case "`date +%m%d`" in
    0214)
      res=💝
      ;;
    0316)
      res=💏
      ;;
    0317)
      res=🍀
      ;;
    0325)
      res=🎉
      ;;
    0623)
      res=💍
      ;;
    0626)
      res=🌻
      ;;
    0704)
      res=🇺🇸
      ;;
    0714)
      res=🇫🇷
      ;;
    0717)
      res=📅
      ;;
    1031)
      res="🎃 👻"
      ;;
    1105)
      res=🇬🇧
      ;;
    1225)
      res="🎅 🎄"
      ;;
  esac

  if [ "$res" != "" ]
  then
    res="$res  "
  fi

  echo -e $res
}

function get_seasonal() {
  moon=`get_moon`

  res=`get_holiday``get_other`

  if [ "$res" != "" ]
  then
    res="$res  "
  fi
  echo -e "$res$moon  "
}

function get_exit_code() {
  if [ "$1" != "0" ]; then
    echo -e "❗️ "
  fi
}

function get_hostname_color() {
  color="\033[0;$(expr $(expr `echo $((0x\`echo blargh | md5\`))` % 6) + 31)m"
  echo -e $color
}

function get_emoji_prompt() {
  #                                          current time          temp + weather
  echo -e "\$(get_exit_code \$?)\$(get_seasonal)$DT\$(date +\"%T\")$IN \$(get_weather_with_cache)  "
}

export PS1=`get_emoji_prompt`$PS1
